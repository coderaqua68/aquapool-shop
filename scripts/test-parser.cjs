/**
 * –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –æ–¥–Ω–æ–º —Ç–æ–≤–∞—Ä–µ
 */

const IntexParser = require('./intex-parser.cjs');

async function testParser() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –æ–¥–Ω–æ–º —Ç–æ–≤–∞—Ä–µ...\n');
  
  const parser = new IntexParser();
  
  // –¢–µ—Å—Ç–æ–≤—ã–π URL –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞
  const testUrl = "https://intex-bassein.ru/catalog/bestway-karkasnye-basseyny/karkasnyy-basseyn-bestway-round-steel-pro-max-krug-3-66-x-1-22-m-artikul-56420/";
  
  try {
    console.log('üì° –ü–∞—Ä—Å–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä...');
    const product = await parser.parseProductPage(testUrl);
    
    console.log('\n‚úÖ –¢–æ–≤–∞—Ä —É—Å–ø–µ—à–Ω–æ —Å–ø–∞—Ä—Å–µ–Ω!');
    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    console.log(`–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.name}`);
    console.log(`–ê—Ä—Ç–∏–∫—É–ª: ${product.sku}`);
    console.log(`–ë—Ä–µ–Ω–¥: ${product.brand}`);
    console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${product.category}`);
    console.log(`–û–±—ä–µ–º: ${product.volume}`);
    console.log(`–†–∞–∑–º–µ—Ä—ã: ${product.dimensions}`);
    console.log(`–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: ${product.shortDescription}`);
    console.log('‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ');
    
    console.log('\nüîç –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:');
    const specs = JSON.parse(product.specifications);
    Object.entries(specs).forEach(([key, value]) => {
      console.log(`  ${key}: ${value}`);
    });
    
    console.log('\nüíæ –°–æ—Ö—Ä–∞–Ω—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...');
    parser.results = [product];
    await parser.saveResults('test-result.json');
    
    console.log('\nüéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: test-result.json');
    
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:');
    console.error(error.message);
    console.error('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.error('  ‚Ä¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É');
    console.error('  ‚Ä¢ –°–∞–π—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.error('  ‚Ä¢ –ò–∑–º–µ–Ω–∏–ª–∞—Å—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ HTML');
    console.error('  ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ User-Agent');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (require.main === module) {
  testParser();
}