// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –≤ storage.ts
import fs from 'fs';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
const catalogData = JSON.parse(fs.readFileSync('./full-catalog.json', 'utf8'));
const products = catalogData.products;

console.log(`üîÑ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ${products.length} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥...`);

// –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 100 —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å)
const selectedProducts = products.slice(0, 100);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è storage.ts
const productEntries = selectedProducts.map((product, index) => {
  const specs = JSON.parse(product.specifications || '{}');
  
  return `      {
        name: ${JSON.stringify(product.name)},
        description: ${JSON.stringify(product.description || `${product.brand} - ${product.name}. –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –±–∞—Å—Å–µ–π–Ω–æ–≤.`)},
        price: "${product.price}",
        originalPrice: ${product.originalPrice ? `"${product.originalPrice}"` : 'null'},
        category: "${product.category}",
        subcategory: ${product.subcategory ? `"${product.subcategory}"` : 'null'},
        brand: "${product.brand}",
        volume: ${product.volume ? `"${product.volume}"` : 'null'},
        imageUrl: "${product.imageUrl}",
        images: ${JSON.stringify(product.images.slice(0, 3))},
        specifications: ${JSON.stringify(JSON.stringify(specs))},
        inStock: ${product.inStock},
        isPopular: ${index < 10},
        isNew: ${index < 5},
        discount: ${product.discount || 0},
        rating: "${product.rating}",
        reviewCount: ${product.reviewCount}
      }${index < selectedProducts.length - 1 ? ',' : ''}`;
}).join(',\n');

const storageCode = `// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤
// –ò–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${selectedProducts.length} —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ${products.length}
// –î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}

const importedProductsData = [
${productEntries}
];

export default importedProductsData;`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
fs.writeFileSync('./catalog-integration.js', storageCode);

console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª catalog-integration.js');
console.log(`üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${selectedProducts.length}`);

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
const categoryStats = {};
const brandStats = {};

selectedProducts.forEach(product => {
  categoryStats[product.category] = (categoryStats[product.category] || 0) + 1;
  brandStats[product.brand] = (brandStats[product.brand] || 0) + 1;
});

console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
Object.entries(categoryStats).forEach(([cat, count]) => {
  console.log(`   ${cat}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
});

console.log('\nüè≠ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±—Ä–µ–Ω–¥–∞–º:');
Object.entries(brandStats).forEach(([brand, count]) => {
  console.log(`   ${brand}: ${count} —Ç–æ–≤–∞—Ä–æ–≤`);
});

console.log('\nüìã –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª catalog-integration.js');
console.log('2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ importedProductsData');
console.log('3. –ó–∞–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ server/storage.ts');