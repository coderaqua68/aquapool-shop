/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–∞—Ä—Å–µ—Ä —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è AquaPool
 * –ü–∞—Ä—Å–∏—Ç —Å–ø–∏—Å–æ–∫ URL —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ
 */

const fs = require('fs');
const path = require('path');

class AutoParser {
  constructor() {
    this.results = [];
    this.errors = [];
  }

  /**
   * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–ø–∏—Å–∫–∞ URL
   * @param {string[]} urls - –°–ø–∏—Å–æ–∫ URL —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
   */
  async parseProducts(urls) {
    console.log(`üöÄ –ù–∞—á–∏–Ω–∞—é –ø–∞—Ä—Å–∏–Ω–≥ ${urls.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    for (let i = 0; i < urls.length; i++) {
      const url = urls[i];
      console.log(`üì¶ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Ç–æ–≤–∞—Ä ${i + 1}/${urls.length}: ${url}`);
      
      try {
        const productData = await this.parseProductPage(url);
        this.results.push(productData);
        console.log(`‚úÖ –¢–æ–≤–∞—Ä "${productData.name}" —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${url}:`, error.message);
        this.errors.push({ url, error: error.message });
      }
      
      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä
      await this.delay(1000);
    }
    
    return this.results;
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
   * @param {string} url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
   */
  async parseProductPage(url) {
    // –ü–æ–ª—É—á–∞–µ–º HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const html = await this.fetchPage(url);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
    const productData = this.extractProductData(html, url);
    
    return productData;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   * @param {string} url - URL –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
   */
  async fetchPage(url) {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç fetch –∏–ª–∏ axios
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    console.log(`üåê –ó–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${url}`);
    
    // –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await this.delay(500);
    
    // –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π HTTP –∑–∞–ø—Ä–æ—Å:
    // const response = await fetch(url);
    // return await response.text();
    
    return `<html><!-- –ó–∞–≥–ª—É—à–∫–∞ HTML --></html>`;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–∞ –∏–∑ HTML
   * @param {string} html - HTML –∫–æ–¥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   * @param {string} url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
   */
  extractProductData(html, url) {
    // –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
    // –í —Ä–µ–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º jsdom –∏–ª–∏ cheerio
    
    // –í–ê–ñ–ù–û: –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –ø–æ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–∞–π—Ç
    // –ü–æ–∫–∞ –¥–µ–ª–∞—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    
    const product = {
      // –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      name: this.extractBySelector(html, 'h1.product-title, .product-name, h1'),
      sku: this.extractBySelector(html, '.product-article, .sku, [data-sku]'),
      price: this.extractPrice(html),
      originalPrice: this.extractOriginalPrice(html),
      
      // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∏ –±—Ä–µ–Ω–¥
      category: this.determineCategory(url, html),
      brand: this.extractBrand(html),
      
      // –û–ø–∏—Å–∞–Ω–∏—è
      description: this.extractDescription(html),
      shortDescription: this.extractShortDescription(html),
      
      // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (URL –±—É–¥—É—Ç –∏–∑–≤–ª–µ—á–µ–Ω—ã, –Ω–æ –∑–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–¥–µ–ª—å–Ω–æ)
      imageUrl: this.extractMainImage(html),
      images: this.extractAdditionalImages(html),
      
      // –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
      specifications: this.extractSpecifications(html),
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∏–∑ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
      ...this.extractAdditionalFields(html),
      
      // –ú–µ—Ç–∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      sourceUrl: url,
      inStock: this.checkAvailability(html),
      isPopular: false,
      isNew: false,
      discount: 0,
      rating: "4.0",
      reviewCount: 0
    };

    return product;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø–æ CSS —Å–µ–ª–µ–∫—Ç–æ—Ä—É
   */
  extractBySelector(html, selector) {
    // –ü—Ä–æ—Å—Ç–∞—è —ç–º—É–ª—è—Ü–∏—è - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–µ–Ω DOM –ø–∞—Ä—Å–µ—Ä
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    return `–ò–∑–≤–ª–µ—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è ${selector}`;
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
   */
  extractPrice(html) {
    // –ò—â–µ–º —Ü–µ–Ω—É –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ—Ä–∞—Ö
    const priceSelectors = [
      '.price-current',
      '.product-price',
      '.price',
      '[data-price]'
    ];
    
    // –ó–¥–µ—Å—å –ª–æ–≥–∏–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∏ —Ü–µ–Ω—ã
    return "15999"; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã (–¥–æ —Å–∫–∏–¥–∫–∏)
   */
  extractOriginalPrice(html) {
    const originalPriceSelectors = [
      '.price-old',
      '.original-price',
      '.price-before'
    ];
    
    return "21999"; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ URL –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
   */
  determineCategory(url, html) {
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º URL –∏ —Ö–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏
    if (url.includes('karkasnye') || url.includes('frame')) {
      return 'frame-pools';
    }
    if (url.includes('naduvnye') || url.includes('inflatable')) {
      return 'inflatable-pools';
    }
    // –î—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...
    
    return 'frame-pools'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–∞
   */
  extractBrand(html) {
    const brandSelectors = [
      '.product-brand',
      '.brand',
      '[data-brand]'
    ];
    
    return "Intex"; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
   */
  extractDescription(html) {
    const descSelectors = [
      '.product-description',
      '.description',
      '.product-content'
    ];
    
    return "–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞..."; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫—Ä–∞—Ç–∫–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
   */
  extractShortDescription(html) {
    return "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞"; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  extractMainImage(html) {
    return "https://example.com/image.jpg"; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
   */
  extractAdditionalImages(html) {
    return []; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
   */
  extractSpecifications(html) {
    // –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—É —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    // –ü–∞—Ä—Å–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∏–ø–∞ —Ç–æ–π, —á—Ç–æ –≤—ã –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –≤ HTML
    
    const specs = {
      "–ë—Ä–µ–Ω–¥": "Intex",
      "–î–∏–∞–º–µ—Ç—Ä (–º)": "3.66",
      "–í—ã—Å–æ—Ç–∞ (–º)": "1.22",
      "–û–±—ä–µ–º (–ª)": "10250",
      "–í–µ—Å (–∫–≥)": "47.8"
    };
    
    return JSON.stringify(specs);
  }

  /**
   * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
   */
  extractAdditionalFields(html) {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É —á—Ç–æ –∏ –≤ HTML –ø–∞—Ä—Å–µ—Ä–µ
    return {
      volume: "10250 –ª",
      weight: "47.8 –∫–≥",
      dimensions: "366 x 122 —Å–º",
      material: "–ü–í–•",
      shape: "–ö—Ä—É–≥–ª—ã–π",
      frameType: "–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π"
    };
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–æ–≤–∞—Ä–∞
   */
  checkAvailability(html) {
    // –ò—â–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–∞–ª–∏—á–∏—è
    return true; // –ó–∞–≥–ª—É—à–∫–∞
  }

  /**
   * –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
   */
  async delay(ms) {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª
   */
  async saveResults(filename = 'parsed-products.json') {
    const outputPath = path.join(__dirname, filename);
    
    const output = {
      success: this.results.length,
      errors: this.errors.length,
      timestamp: new Date().toISOString(),
      products: this.results,
      errors: this.errors
    };
    
    fs.writeFileSync(outputPath, JSON.stringify(output, null, 2), 'utf8');
    console.log(`üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputPath}`);
    
    return outputPath;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ storage.ts
   */
  generateStorageCode() {
    if (this.results.length === 0) {
      return "// –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏";
    }

    let code = "// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n";
    code += "const autoGeneratedProducts = [\n";
    
    this.results.forEach((product, index) => {
      code += `  {\n`;
      code += `    name: "${product.name}",\n`;
      code += `    sku: "${product.sku}",\n`;
      code += `    description: \`${product.description}\`,\n`;
      code += `    shortDescription: "${product.shortDescription}",\n`;
      code += `    price: "${product.price}",\n`;
      code += `    originalPrice: "${product.originalPrice}",\n`;
      code += `    category: "${product.category}",\n`;
      code += `    brand: "${product.brand}",\n`;
      code += `    volume: "${product.volume}",\n`;
      code += `    imageUrl: "/api/placeholder/400/400",\n`; // –ó–∞–≥–ª—É—à–∫–∞ –ø–æ–∫–∞ –Ω–µ—Ç —Ñ–æ—Ç–æ
      code += `    images: [],\n`;
      code += `    specifications: \`${product.specifications}\`,\n`;
      code += `    inStock: ${product.inStock},\n`;
      code += `    isPopular: false,\n`;
      code += `    isNew: false,\n`;
      code += `    discount: 0,\n`;
      code += `    rating: "4.0",\n`;
      code += `    reviewCount: 0\n`;
      code += `  }${index < this.results.length - 1 ? ',' : ''}\n`;
    });
    
    code += "];\n\n";
    code += "// –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ —Ç–æ–≤–∞—Ä—ã –≤ initializeData() –≤ storage.ts\n";
    
    return code;
  }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
async function main() {
  const parser = new AutoParser();
  
  // –°–ø–∏—Å–æ–∫ URL —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
  const productUrls = [
    "https://example.com/product1",
    "https://example.com/product2",
    "https://example.com/product3"
  ];
  
  try {
    // –ü–∞—Ä—Å–∏–º —Ç–æ–≤–∞—Ä—ã
    await parser.parseProducts(productUrls);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    await parser.saveResults();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–¥ –¥–ª—è storage
    const storageCode = parser.generateStorageCode();
    fs.writeFileSync('generated-storage.js', storageCode, 'utf8');
    
    console.log(`\nüéâ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!`);
    console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${parser.results.length}`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${parser.errors.length}`);
    console.log(`üìÅ –§–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã: parsed-products.json, generated-storage.js`);
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

module.exports = AutoParser;

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}