#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É –¥–ª—è Vercel...');

try {
  // 1. –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
  console.log('üì¶ –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...');
  execSync('npm run build', { stdio: 'inherit' });

  // 2. –ö–æ–ø–∏—Ä—É–µ–º –≤–∏–¥–µ–æ —Ñ–∞–π–ª –≤ public
  const videoSrc = 'attached_assets/d5eff5f333d3051b9f1f8efec1fd51ab_1751200866687.webm';
  const videoDest = 'client/dist/d5eff5f333d3051b9f1f8efec1fd51ab_1751200866687.webm';
  
  if (fs.existsSync(videoSrc)) {
    fs.copyFileSync(videoSrc, videoDest);
    console.log('üé• –í–∏–¥–µ–æ —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω');
  }

  // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤
  const serverFile = 'server/index.ts';
  const clientDist = 'client/dist';
  
  if (!fs.existsSync(serverFile)) {
    throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç server/index.ts');
  }
  
  if (!fs.existsSync(clientDist)) {
    throw new Error('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç client/dist');
  }

  console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ Vercel!');
  console.log('üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞:');
  console.log('  - server/index.ts (API —Å–µ—Ä–≤–µ—Ä)');
  console.log('  - client/dist/ (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã)');
  console.log('  - vercel.json (–∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è)');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:', error.message);
  process.exit(1);
}