// –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å intex-bassein.ru
// –ó–∞–ø—É—Å–∫–∞—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ç–∞–ª–æ–≥–∞

(function() {
  console.log('–ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤...');
  console.log('URL:', window.location.href);
  
  const results = {
    products: [],
    timestamp: new Date().toISOString(),
    url: window.location.href,
    category: extractCategoryFromUrl()
  };

  function extractCategoryFromUrl() {
    const path = window.location.pathname;
    const match = path.match(/\/catalog\/([^\/]+)/);
    return match ? match[1] : 'unknown';
  }

  function determineBrand(name) {
    const nameLower = name.toLowerCase();
    if (nameLower.includes('intex')) return 'Intex';
    if (nameLower.includes('bestway')) return 'Bestway';
    if (nameLower.includes('laguna')) return 'Laguna';
    if (nameLower.includes('jilong')) return 'Jilong';
    return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
  }

  function extractPrice(priceText) {
    if (!priceText) return '';
    return priceText.replace(/[^\d]/g, '');
  }

  function extractProducts() {
    // –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ
    const selectors = [
      '.catalog-item',
      '.product-item', 
      '.item-block',
      '.product-card',
      '.catalog-element-item',
      '.bx-catalog-item'
    ];
    
    let productElements = [];
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä—ã –ø–æ —Ä–∞–∑–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
    for (const selector of selectors) {
      productElements = document.querySelectorAll(selector);
      if (productElements.length > 0) {
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${productElements.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
        break;
      }
    }
    
    if (productElements.length === 0) {
      console.log('–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã...');
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
      const alternativeSelectors = [
        '[data-entity="item"]',
        '.catalog-section-item',
        '.product',
        '.item'
      ];
      
      for (const selector of alternativeSelectors) {
        productElements = document.querySelectorAll(selector);
        if (productElements.length > 0) {
          console.log(`–ù–∞–π–¥–µ–Ω–æ ${productElements.length} —Ç–æ–≤–∞—Ä–æ–≤ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º: ${selector}`);
          break;
        }
      }
    }
    
    if (productElements.length === 0) {
      console.error('–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ!');
      console.log('–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:');
      console.log('- .catalog-item:', document.querySelectorAll('.catalog-item').length);
      console.log('- .product-item:', document.querySelectorAll('.product-item').length);
      console.log('- .item-block:', document.querySelectorAll('.item-block').length);
      return;
    }
    
    console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ${productElements.length} —Ç–æ–≤–∞—Ä–æ–≤...`);
    
    productElements.forEach((element, index) => {
      try {
        // –†–∞–∑–ª–∏—á–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        const nameSelectors = [
          '.item-title a',
          '.product-name a', 
          '.catalog-item-title a',
          '.name a',
          'h3 a',
          '.title a',
          '[data-entity="name"] a'
        ];
        
        let nameElement = null;
        for (const selector of nameSelectors) {
          nameElement = element.querySelector(selector);
          if (nameElement) break;
        }
        
        // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ü–µ–Ω—ã
        const priceSelectors = [
          '.price-current',
          '.price',
          '.cost',
          '.current-price',
          '.item-price',
          '[data-entity="price"]'
        ];
        
        let priceElement = null;
        for (const selector of priceSelectors) {
          priceElement = element.querySelector(selector);
          if (priceElement) break;
        }
        
        // –°–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Å—Ç–∞—Ä–æ–π —Ü–µ–Ω—ã
        const oldPriceSelectors = [
          '.price-old',
          '.old-price',
          '.discount-price',
          '.crossed-price'
        ];
        
        let oldPriceElement = null;
        for (const selector of oldPriceSelectors) {
          oldPriceElement = element.querySelector(selector);
          if (oldPriceElement) break;
        }
        
        // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const imageElement = element.querySelector('img');
        
        // –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä
        const linkElement = element.querySelector('a[href*="/catalog/"]') || 
                           element.querySelector('a') ||
                           nameElement;
        
        if (!nameElement || !priceElement) {
          console.log(`–¢–æ–≤–∞—Ä ${index + 1}: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã`);
          return;
        }
        
        const name = nameElement.textContent.trim();
        const price = extractPrice(priceElement.textContent);
        const oldPrice = oldPriceElement ? extractPrice(oldPriceElement.textContent) : null;
        const imageUrl = imageElement ? 
          (imageElement.src || 
           imageElement.dataset.src || 
           imageElement.dataset.original ||
           imageElement.getAttribute('data-lazy-src')) : '';
        const productUrl = linkElement ? linkElement.href : '';
        
        if (!name || !price) {
          console.log(`–¢–æ–≤–∞—Ä ${index + 1}: –ø—É—Å—Ç–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ —Ü–µ–Ω–∞`);
          return;
        }
        
        const brand = determineBrand(name);
        const discount = oldPrice && parseInt(oldPrice) > parseInt(price) ? 
          Math.round((1 - parseInt(price) / parseInt(oldPrice)) * 100) : 0;
        
        const product = {
          id: index + 1,
          name: name,
          description: `${brand} - ${name}`,
          price: price,
          originalPrice: oldPrice,
          brand: brand,
          category: results.category,
          imageUrl: imageUrl,
          productUrl: productUrl,
          inStock: true,
          discount: discount,
          extractedFrom: window.location.href
        };
        
        results.products.push(product);
        console.log(`‚úì –¢–æ–≤–∞—Ä ${index + 1}: ${name.substring(0, 50)}...`);
        
      } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–æ–≤–∞—Ä–∞ ${index + 1}:`, error);
      }
    });
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–≤–∞—Ä—ã
  extractProducts();
  
  // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log('\n=== –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–ê–†–°–ò–ù–ì–ê ===');
  console.log(`–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${window.location.href}`);
  console.log(`–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${results.category}`);
  console.log(`–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${results.products.length}`);
  
  if (results.products.length === 0) {
    console.error('‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!');
    console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:');
    console.log('1. –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ (–Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∫–∞—Ç–∞–ª–æ–≥–∞)');
    console.log('2. –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    console.log('3. –ù–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ JavaScript');
    return null;
  }
  
  console.log('\nüìÑ –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:');
  results.products.slice(0, 3).forEach((product, i) => {
    console.log(`${i + 1}. ${product.name} - ${product.price} ‚ÇΩ`);
  });
  
  // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  const dataStr = JSON.stringify(results, null, 2);
  const dataBlob = new Blob([dataStr], {type: 'application/json'});
  const url = URL.createObjectURL(dataBlob);
  const link = document.createElement('a');
  link.href = url;
  link.download = `intex-${results.category}-${Date.now()}.json`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  URL.revokeObjectURL(url);
  
  console.log(`\n‚úÖ –§–∞–π–ª —Å–∫–∞—á–∞–Ω: intex-${results.category}-${Date.now()}.json`);
  console.log('\nüí° –°–æ–≤–µ—Ç: –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤');
  
  return results;
})();