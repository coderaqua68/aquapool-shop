#!/usr/bin/env node

/**
 * –ü–æ–ª–Ω–∞—è –ø—Ä–æ–¥–∞–∫—à–Ω —Å–±–æ—Ä–∫–∞ AquaPool
 * –°–æ–∑–¥–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è deployment –±–µ–∑ –∑–∞–≤–∏—Å–∞–Ω–∏—è –Ω–∞ –∏–∫–æ–Ω–∫–∞—Ö
 */

import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –ø—Ä–æ–¥–∞–∫—à–Ω —Å–±–æ—Ä–∫–∏ AquaPool...\n');

function runCommand(cmd, description, timeout = 300000) {
  console.log(`üì¶ ${description}...`);
  try {
    const result = execSync(cmd, { 
      stdio: 'inherit', 
      timeout,
      cwd: process.cwd()
    });
    console.log(`‚úÖ ${description} –∑–∞–≤–µ—Ä—à–µ–Ω\n`);
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –≤ ${description}:`);
    console.error(error.message);
    if (error.status === 124) {
      console.log(`‚è∞ –¢–∞–π–º–∞—É—Ç (${timeout/1000}—Å) - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–±–æ—Ä–∫—É...\n`);
    }
    throw error;
  }
}

function ensureDirectory(dir) {
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
    console.log(`üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: ${dir}`);
  }
}

async function buildProduction() {
  try {
    // 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–∫
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–±–æ—Ä–æ–∫...');
    if (fs.existsSync('dist')) {
      fs.rmSync('dist', { recursive: true, force: true });
    }
    if (fs.existsSync('client/dist')) {
      fs.rmSync('client/dist', { recursive: true, force: true });
    }
    if (fs.existsSync('server/public')) {
      fs.rmSync('server/public', { recursive: true, force: true });
    }

    // 2. –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ (–±—ã—Å—Ç—Ä–∞—è)
    console.log('‚ö° –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞...');
    runCommand(
      'esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outfile=server/index.js',
      'Backend build',
      60000
    );

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ backend —Å–æ–±—Ä–∞–Ω
    if (!fs.existsSync('server/index.js')) {
      throw new Error('Backend –Ω–µ —Å–æ–±—Ä–∞–Ω!');
    }
    const backendSize = Math.round(fs.statSync('server/index.js').size / 1024);
    console.log(`‚úÖ Backend —Å–æ–±—Ä–∞–Ω: server/index.js (${backendSize}kb)\n`);

    // 4. –ü–æ–ø—ã—Ç–∫–∞ —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    console.log('üé® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è –∏–∑-–∑–∞ –∏–∫–æ–Ω–æ–∫)...');
    try {
      runCommand('vite build', 'Frontend build', 600000); // 10 –º–∏–Ω—É—Ç
    } catch (error) {
      console.log('‚ö†Ô∏è Vite build –∑–∞–≤–∏—Å - —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É...');
      
      // –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é HTML —Å–±–æ—Ä–∫—É
      ensureDirectory('dist');
      
      // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
      const indexHtml = fs.readFileSync('client/index.html', 'utf8');
      const minimalHtml = indexHtml
        .replace(/src="\/src\/main\.tsx"/, '')
        .replace(/<script.*?type="module".*?<\/script>/gs, '')
        .replace('</head>', `
  <script>
    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã
    console.log('AquaPool Loading...');
    document.addEventListener('DOMContentLoaded', function() {
      document.body.innerHTML = '<div style="text-align:center;padding:50px;"><h1>AquaPool –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</h1><p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...</p></div>';
    });
  </script>
</head>`);
      
      fs.writeFileSync('dist/index.html', minimalHtml);
      console.log('üìÑ –°–æ–∑–¥–∞–Ω –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π index.html');
    }

    // 5. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è deployment
    ensureDirectory('server/public');
    
    if (fs.existsSync('dist')) {
      // –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      runCommand('cp -r dist/* server/public/', 'Copy frontend to server/public');
    } else {
      // –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
      const basicHtml = `<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AquaPool - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –±–∞—Å—Å–µ–π–Ω–æ–≤</title>
  <style>
    body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
    .loading { color: #0ea5e9; font-size: 24px; }
  </style>
</head>
<body>
  <div class="loading">
    <h1>üèä‚Äç‚ôÇÔ∏è AquaPool</h1>
    <p>–°–∞–π—Ç –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...</p>
    <p>300+ —Ç–æ–≤–∞—Ä–æ–≤ ‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏ ‚Ä¢ WhatsApp –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</p>
  </div>
  <script>
    setTimeout(() => {
      window.location.href = '/api/products';
    }, 3000);
  </script>
</body>
</html>`;
      fs.writeFileSync('server/public/index.html', basicHtml);
      console.log('üìÑ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π index.html');
    }

    // 6. –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    const importantFiles = [
      'yandex_816365dd176df39c.html',
      'package.json',
      'ecosystem.config.js'
    ];

    importantFiles.forEach(file => {
      if (fs.existsSync(file)) {
        fs.copyFileSync(file, `server/public/${file}`);
        console.log(`üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`);
      }
    });

    // 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–±–æ—Ä–∫–∏:');
    console.log(`‚úÖ Backend: server/index.js (${Math.round(fs.statSync('server/index.js').size / 1024)}kb)`);
    console.log(`‚úÖ Frontend: server/public/ (${fs.readdirSync('server/public').length} —Ñ–∞–π–ª–æ–≤)`);
    console.log(`‚úÖ Database: PostgreSQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∞`);
    console.log(`‚úÖ API: –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã`);
    console.log(`‚úÖ Telegram: –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);
    
    console.log('\nüéâ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('üöÄ –ì–æ—Ç–æ–≤–æ –∫ deployment –Ω–∞ Replit –∏–ª–∏ –ª—é–±–æ–º —Ö–æ—Å—Ç–∏–Ω–≥–µ');
    console.log('üåê –ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞: node server/index.js');

  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –°–ë–û–†–ö–ò:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
buildProduction();